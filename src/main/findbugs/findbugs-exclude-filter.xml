<!--
  ~ Copyright 2009-2017. DigitalGlobe, Inc.
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and limitations under the License.
  -->

<FindBugsFilter>
  <!-- Remove CRLF Log Injection.  We have a custom Appender Wrapper that encodes ALL logs properly -->
  <Match>
    <Bug pattern="CRLF_INJECTION_LOGS"/>
  </Match>
  <!-- Scala code generates these as well -->
  <Match>
    <Source name="~.*\.scala"/>
    <Or>
      <!-- object has no constructor = empty Externalizable prevents object serialization -->
      <Bug pattern="SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION"/>
      <!-- Scala constant naming convention is uppercase first letter-->
      <Bug pattern="NM_METHOD_NAMING_CONVENTION"/>
      <!-- Scala generated getter/setters -->
      <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD"/>
      <!-- Scala generated array getter -->
      <Bug pattern="EI_EXPOSE_REP"/>
      <!-- Scala generated array setter -->
      <Bug pattern="EI_EXPOSE_REP2"/>
      <!-- Spark does intelligent serialization, this is a false positive -->
      <Bug pattern="SE_BAD_FIELD"/>
      <!-- This just seems to be a false positive on object defs where the class is serializable -->
      <Bug pattern="SE_NO_SERIALVERSIONID"/>
      <!-- This just seems to be a false positive in a number of places and suppressing it locally did not work -->
      <Bug pattern="NP_ALWAYS_NULL"/>

    </Or>
  </Match>
  <!-- Don't bother with DM_DEFAULT_ENCODING - default encoding -->
  <Match>
    <Bug pattern="DM_DEFAULT_ENCODING"/>
  </Match>
  <!-- Don't bother with DM_CONVERT_CASE - non-localized toupper or tolower -->
  <Match>
    <Bug pattern="DM_CONVERT_CASE"/>
  </Match>
  <!-- Don't bother with NM_CONFUSING - "confusing" names. -->
  <Match>
    <Bug pattern="NM_CONFUSING"/>
  </Match>
  <Match>
    <Package name="org.mrgeo.mapbox.vector.tile"/>
  </Match>
</FindBugsFilter>
